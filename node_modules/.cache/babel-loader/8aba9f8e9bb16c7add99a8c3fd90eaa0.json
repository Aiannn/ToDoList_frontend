{"ast":null,"code":"var _jsxFileName = \"/Users/aiansoktoev/Development/code/Mod4/module-4-practice-todo-nyc01-seng-ft-062220/src/MyTask.js\";\nimport React from 'react';\nimport './App.css';\nimport { CATEGORIES } from './data';\nimport TaskList from './components/TaskList';\nimport CategoryFilters from './components/CategoryFilters';\nimport StretchToggle from './components/StretchToggle';\nimport TaskForm from './components/TaskForm';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showStretchFeatures: false,\n      selectedCategory: 'All',\n      tasks: []\n    };\n\n    this.getAPI = () => {\n      fetch('http://localhost:3000/tasks').then(response => response.json()).then(data => {\n        this.setState({\n          tasks: data\n        });\n      });\n    };\n\n    this.switchStretchFeatures = () => {\n      this.setState({\n        showStretchFeatures: !this.state.showStretchFeatures\n      });\n    };\n\n    this.setCategory = selectedCategory => {\n      this.setState({\n        selectedCategory: selectedCategory\n      });\n      this.filterArray();\n    };\n\n    this.addTask = task => {\n      this.setState({\n        tasks: [...this.state.tasks, task]\n      });\n      let obj = {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json',\n          'accept': 'application/json'\n        },\n        body: JSON.stringify({\n          text: task.text,\n          category: task.category\n        })\n      };\n      fetch('http://localhost:3000/tasks', obj).then(resp => resp.json()).then(task => console.log(task));\n    };\n\n    this.deleteTask = task => {\n      this.setState({\n        tasks: this.state.tasks.filter(t => !(t.text === task.text && t.category === task.category))\n      });\n    };\n\n    this.filterArray = () => this.state.tasks.filter(task => this.state.selectedCategory === 'All' || task.category === this.state.selectedCategory);\n  }\n\n  componentDidMount() {\n    this.getAPI();\n  }\n\n  render() {\n    const tasks = this.filterArray();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(StretchToggle, {\n      showStretchFeatures: this.state.showStretchFeatures,\n      switchStretchFeatures: this.switchStretchFeatures,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }, \"My tasks\"), /*#__PURE__*/React.createElement(CategoryFilters, {\n      selectedCategory: this.state.selectedCategory,\n      setCategory: this.setCategory,\n      categories: CATEGORIES,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tasks\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, \"Tasks\"), this.state.showStretchFeatures ? /*#__PURE__*/React.createElement(TaskForm, {\n      addTask: this.addTask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 46\n      }\n    }) : null, /*#__PURE__*/React.createElement(TaskList, {\n      deleteTask: this.deleteTask,\n      showDeleteButtons: this.state.showStretchFeatures,\n      tasks: tasks,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/aiansoktoev/Development/code/Mod4/module-4-practice-todo-nyc01-seng-ft-062220/src/MyTask.js"],"names":["React","CATEGORIES","TaskList","CategoryFilters","StretchToggle","TaskForm","App","Component","state","showStretchFeatures","selectedCategory","tasks","getAPI","fetch","then","response","json","data","setState","switchStretchFeatures","setCategory","filterArray","addTask","task","obj","method","headers","body","JSON","stringify","text","category","resp","console","log","deleteTask","filter","t","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { CATEGORIES } from './data'\nimport TaskList from './components/TaskList'\nimport CategoryFilters from './components/CategoryFilters'\nimport StretchToggle from './components/StretchToggle'\nimport TaskForm from './components/TaskForm'\n\nclass App extends React.Component {\n\n  state = {\n    showStretchFeatures: false,\n    selectedCategory: 'All',\n    tasks: []\n  }\n\n  componentDidMount() {\n    this.getAPI()\n  }\n\n  getAPI = () => {\n    fetch('http://localhost:3000/tasks')\n    .then(response=>response.json())\n    .then(data => {\n      this.setState({\n        tasks: data\n      })\n    })\n  }\n\n  switchStretchFeatures = () => {\n    this.setState({\n      showStretchFeatures: !this.state.showStretchFeatures\n    })\n  }\n\n  setCategory = (selectedCategory) => {\n    this.setState({\n      selectedCategory: selectedCategory\n    })\n    this.filterArray()\n  }\n\n  addTask = task => {\n    this.setState({\n      tasks: [...this.state.tasks, task]\n    })\n\n    let obj = {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n        'accept': 'application/json'\n      },\n      body: JSON.stringify({\n        text: task.text,\n        category: task.category \n      })\n    }\n\n    fetch('http://localhost:3000/tasks', obj)\n    .then(resp => resp.json())\n    .then(task => console.log(task))\n  }\n\n  deleteTask = task => {\n    this.setState({\n      tasks: this.state.tasks.filter(\n        t => !(t.text === task.text && t.category===task.category)\n      )\n    })\n  }\n\n  filterArray = () => \n    this.state.tasks.filter(task =>\n      this.state.selectedCategory === 'All' ||\n      task.category === this.state.selectedCategory\n    )\n\n  render() {\n\n    const tasks = this.filterArray()\n\n    return (\n        <div className=\"App\">\n          <StretchToggle showStretchFeatures={this.state.showStretchFeatures} switchStretchFeatures={this.switchStretchFeatures} />\n          <h2>My tasks</h2>\n          <CategoryFilters selectedCategory={this.state.selectedCategory} setCategory={this.setCategory} categories={CATEGORIES}/>\n          <div className=\"tasks\">\n            <h5>Tasks</h5>\n            {this.state.showStretchFeatures? <TaskForm addTask={this.addTask} />:null}\n            <TaskList deleteTask={this.deleteTask} showDeleteButtons={this.state.showStretchFeatures} tasks={tasks}/>\n          </div>\n        </div>\n    )\n  }\n}\n\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}