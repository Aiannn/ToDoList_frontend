{"ast":null,"code":"var _jsxFileName = \"/Users/aiansoktoev/Development/code/Mod4/module-4-practice-todo-nyc01-seng-ft-062220/src/MyTasks.js\";\nimport React from 'react';\nimport './MyTasks.css';\nimport { CATEGORIES } from './data';\nimport TaskList from './components/TaskList';\nimport CategoryFilters from './components/CategoryFilters';\nimport StretchToggle from './components/StretchToggle';\nimport TaskForm from './components/TaskForm';\n\nclass MyTasks extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showStretchFeatures: false,\n      selectedCategory: 'All',\n      tasks: []\n    };\n\n    this.updateTask = (updTask, text) => {\n      let obj = {\n        method: 'PATCH',\n        headers: {\n          'content-type': 'application/json',\n          'accept': 'applciation/json'\n        },\n        body: JSON.stringify({\n          id: updTask.id,\n          text: text\n        })\n      };\n      fetch(`http://localhost:3000/tasks/${updTask.id}`, obj).then(response => response.json()).then(updTask => {\n        console.log(updTask);\n      });\n    };\n\n    this.getAPI = () => {\n      const token = localStorage.getItem(\"token\");\n\n      if (token) {\n        fetch('http://localhost:3000/api/v1/profile', {\n          method: 'GET',\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        }).then(response => response.json()).then(data => {\n          console.log(data.user.tasks);\n          this.setState({\n            tasks: data.user.tasks\n          });\n        });\n      }\n    };\n\n    this.switchStretchFeatures = () => {\n      this.setState({\n        showStretchFeatures: !this.state.showStretchFeatures\n      });\n    };\n\n    this.setCategory = selectedCategory => {\n      this.setState({\n        selectedCategory: selectedCategory\n      });\n      this.filterArray();\n    };\n\n    this.addTask = task => {\n      // this.setState({\n      //   tasks: [...this.state.tasks, task]\n      // }) OPTIMISTIC RENDERING DOESN'T WORK BECAUSE, THE NEW TASK DOESN'T HAVE AN ID, ON WHICH DELETE METHOD RELY\n      let obj = {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json',\n          'accept': 'application/json'\n        },\n        body: JSON.stringify({\n          text: task.text,\n          category: task.category,\n          username: this.props.user.username\n        })\n      };\n      fetch('http://localhost:3000/tasks', obj).then(resp => resp.json()).then(task => {\n        console.log(task);\n        this.setState({\n          tasks: [...this.state.tasks, task]\n        });\n      });\n    };\n\n    this.deleteTask = task => {\n      this.setState({\n        tasks: this.state.tasks.filter(t => !(t.text === task.text && t.category === task.category))\n      });\n      let obj = {\n        method: 'DELETE'\n      };\n      fetch(`http://localhost:3000/tasks/${task.id}`, obj);\n    };\n\n    this.filterArray = () => this.state.tasks.filter(task => this.state.selectedCategory === 'All' || task.category === this.state.selectedCategory);\n  }\n\n  componentDidMount() {\n    this.getAPI();\n  }\n\n  render() {\n    const tasks = this.filterArray();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(StretchToggle, {\n      showStretchFeatures: this.state.showStretchFeatures,\n      switchStretchFeatures: this.switchStretchFeatures,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }\n    }, \"My tasks\"), /*#__PURE__*/React.createElement(CategoryFilters, {\n      selectedCategory: this.state.selectedCategory,\n      setCategory: this.setCategory,\n      categories: CATEGORIES,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tasks\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }, \"Tasks\"), this.state.showStretchFeatures ? /*#__PURE__*/React.createElement(TaskForm, {\n      addTask: this.addTask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 46\n      }\n    }) : null, /*#__PURE__*/React.createElement(TaskList, {\n      updateTask: this.updateTask,\n      deleteTask: this.deleteTask,\n      showStretchFeatures: this.state.showStretchFeatures,\n      tasks: tasks,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nexport default MyTasks;","map":{"version":3,"sources":["/Users/aiansoktoev/Development/code/Mod4/module-4-practice-todo-nyc01-seng-ft-062220/src/MyTasks.js"],"names":["React","CATEGORIES","TaskList","CategoryFilters","StretchToggle","TaskForm","MyTasks","Component","state","showStretchFeatures","selectedCategory","tasks","updateTask","updTask","text","obj","method","headers","body","JSON","stringify","id","fetch","then","response","json","console","log","getAPI","token","localStorage","getItem","Authorization","data","user","setState","switchStretchFeatures","setCategory","filterArray","addTask","task","category","username","props","resp","deleteTask","filter","t","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './MyTasks.css';\nimport { CATEGORIES } from './data'\nimport TaskList from './components/TaskList'\nimport CategoryFilters from './components/CategoryFilters'\nimport StretchToggle from './components/StretchToggle'\nimport TaskForm from './components/TaskForm'\n\nclass MyTasks extends React.Component {\n\n  state = {\n    showStretchFeatures: false,\n    selectedCategory: 'All',\n    tasks: []\n  }\n\n  componentDidMount() {\n    this.getAPI()\n  }\n\n  updateTask = (updTask, text) => {\n\n    let obj = {\n      method: 'PATCH',\n      headers: {\n        'content-type': 'application/json',\n        'accept': 'applciation/json'\n      },\n      body: JSON.stringify({\n        id: updTask.id,\n        text: text \n      })\n    }\n\n    fetch(`http://localhost:3000/tasks/${updTask.id}`, obj)\n    .then(response => response.json())\n    .then(updTask => {\n      console.log(updTask)           \n    })\n  }\n\n  getAPI = () => {\n    const token = localStorage.getItem(\"token\")\n    if (token) {\n      fetch('http://localhost:3000/api/v1/profile', {\n        method: 'GET',\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }) \n      .then(response=>response.json())\n      .then(data => {\n        console.log(data.user.tasks)\n        this.setState({\n          tasks: data.user.tasks\n        })\n      })\n    }\n  }\n\n  switchStretchFeatures = () => {\n    this.setState({\n      showStretchFeatures: !this.state.showStretchFeatures\n    })\n  }\n\n  setCategory = (selectedCategory) => {\n    this.setState({\n      selectedCategory: selectedCategory\n    })\n    this.filterArray()\n  }\n\n  addTask = task => {\n    // this.setState({\n    //   tasks: [...this.state.tasks, task]\n    // }) OPTIMISTIC RENDERING DOESN'T WORK BECAUSE, THE NEW TASK DOESN'T HAVE AN ID, ON WHICH DELETE METHOD RELY\n\n    let obj = {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n        'accept': 'application/json'\n      },\n      body: JSON.stringify({\n        text: task.text,\n        category: task.category,\n        username: this.props.user.username \n      })\n    }\n\n    fetch('http://localhost:3000/tasks', obj)\n    .then(resp => resp.json())\n    .then(task => {\n      console.log(task)\n      this.setState({\n        tasks: [...this.state.tasks, task]\n      })\n    })\n  }\n\n  deleteTask = task => {\n    this.setState({\n      tasks: this.state.tasks.filter(\n        t => !(t.text === task.text && t.category===task.category)\n      )\n    })\n\n    let obj = {\n      method: 'DELETE'\n    }\n\n    fetch(`http://localhost:3000/tasks/${task.id}`, obj)\n  }\n\n  filterArray = () => \n    this.state.tasks.filter(task =>\n      this.state.selectedCategory === 'All' ||\n      task.category === this.state.selectedCategory\n    )\n\n  render() {\n\n    const tasks = this.filterArray()\n\n    return (\n        <div className=\"App\">\n          <StretchToggle showStretchFeatures={this.state.showStretchFeatures} switchStretchFeatures={this.switchStretchFeatures} />\n          <h2>My tasks</h2>\n          <CategoryFilters selectedCategory={this.state.selectedCategory} setCategory={this.setCategory} categories={CATEGORIES}/>\n          <div className=\"tasks\">\n            <h5>Tasks</h5>\n            {this.state.showStretchFeatures? <TaskForm addTask={this.addTask} />:null}\n            <TaskList updateTask={this.updateTask} deleteTask={this.deleteTask} showStretchFeatures={this.state.showStretchFeatures} tasks={tasks}/>\n          </div>\n        </div>\n    )\n  }\n}\n\n\nexport default MyTasks;\n\n"]},"metadata":{},"sourceType":"module"}